/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerkleRoyalties } from "./MerkleRoyalties";

export class MerkleRoyaltiesFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MerkleRoyalties> {
    return super.deploy(overrides || {}) as Promise<MerkleRoyalties>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleRoyalties {
    return super.attach(address) as MerkleRoyalties;
  }
  connect(signer: Signer): MerkleRoyaltiesFactory {
    return super.connect(signer) as MerkleRoyaltiesFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleRoyalties {
    return new Contract(address, _abi, signerOrProvider) as MerkleRoyalties;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "bytes32[][]",
        name: "_proofs",
        type: "bytes32[][]",
      },
      {
        internalType: "uint256[]",
        name: "_splitPoints",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a2b806100206000396000f3fe6080604052600436106100385760003560e01c806305141cd014610068578063c2a1c3d9146100af578063c53b7702146100d157600080fd5b3661006357336000908152600160205260408120805434929061005c908490610928565b9091555050005b600080fd5b34801561007457600080fd5b5061009d61008336600461079c565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b3480156100bb57600080fd5b506100cf6100ca3660046107cf565b6100fe565b005b3480156100dd57600080fd5b5061009d6100ec36600461077a565b60016020526000908152604090205481565b81518351148015610110575080518351145b61014b5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064015b60405180910390fd5b6000805b84518110156104d057600085828151811061016c5761016c6109c9565b60200260200101519050600084838151811061018a5761018a6109c9565b6020908102919091018101516001600160a01b0384166000818152808452604080822033835285528082205481516313b8d89760e11b8152915194965087959094929392632771b12e926004808201939291829003018186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022891906108ba565b905080821061026b5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b6044820152606401610142565b604080513360601b6bffffffffffffffffffffffff19166020808301919091526034808301889052835180840390910181526054909201909252805191012061033e908a88815181106102c0576102c06109c9565b6020026020010151856001600160a01b03166309063af66040518163ffffffff1660e01b815260040160206040518083038186803b15801561030157600080fd5b505afa158015610315573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033991906108ba565b610561565b6103815760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b6044820152606401610142565b60006001600160a01b03841663e732887361039d856001610928565b846040518363ffffffff1660e01b81526004016103c4929190918252602082015260400190565b60206040518083038186803b1580156103dc57600080fd5b505afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906108ba565b9050816000808d8a8151811061042c5761042c6109c9565b6020908102919091018101516001600160a01b03168252818101929092526040908101600090812033825290925281209190915561271061046d8784610962565b6104779190610940565b6001600160a01b0388166000908152600160205260408120805492935083929091906104a4908490610981565b909155506104b49050818a610928565b98505050505050505080806104c890610998565b91505061014f565b50604051600090339083908381818185875af1925050503d8060008114610513576040519150601f19603f3d011682016040523d82523d6000602084013e610518565b606091505b505090508061055a5760405162461bcd60e51b815260206004820152600e60248201526d18dbdd5b19081b9bdd081cd95b9960921b6044820152606401610142565b5050505050565b600061056e838386610576565b949350505050565b600082610583858461058c565b14949350505050565b600081815b84518110156105f85760008582815181106105ae576105ae6109c9565b602002602001015190508083116105d457600083815260208290526040902092506105e5565b600081815260208490526040902092505b50806105f081610998565b915050610591565b509392505050565b80356001600160a01b038116811461061757600080fd5b919050565b600082601f83011261062d57600080fd5b8135602061064261063d83610904565b6108d3565b82815281810190858301600585811b8801850189101561066157600080fd5b60005b868110156106ff57823567ffffffffffffffff81111561068357600080fd5b8901603f81018b1361069457600080fd5b8681013560406106a661063d83610904565b808382528a820191508285018f84868a1b88010111156106c557600080fd5b600095505b848610156106e8578035835260019590950194918b01918b016106ca565b508952505050948601945091850191600101610664565b509198975050505050505050565b600082601f83011261071e57600080fd5b8135602061072e61063d83610904565b80838252828201915082860187848660051b890101111561074e57600080fd5b60005b8581101561076d57813584529284019290840190600101610751565b5090979650505050505050565b60006020828403121561078c57600080fd5b61079582610600565b9392505050565b600080604083850312156107af57600080fd5b6107b883610600565b91506107c660208401610600565b90509250929050565b6000806000606084860312156107e457600080fd5b833567ffffffffffffffff808211156107fc57600080fd5b818601915086601f83011261081057600080fd5b8135602061082061063d83610904565b8083825282820191508286018b848660051b890101111561084057600080fd5b600096505b8487101561086a5761085681610600565b835260019690960195918301918301610845565b509750508701359250508082111561088157600080fd5b61088d8783880161061c565b935060408601359150808211156108a357600080fd5b506108b08682870161070d565b9150509250925092565b6000602082840312156108cc57600080fd5b5051919050565b604051601f8201601f1916810167ffffffffffffffff811182821017156108fc576108fc6109df565b604052919050565b600067ffffffffffffffff82111561091e5761091e6109df565b5060051b60200190565b6000821982111561093b5761093b6109b3565b500190565b60008261095d57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561097c5761097c6109b3565b500290565b600082821015610993576109936109b3565b500390565b60006000198214156109ac576109ac6109b3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212205b4af20e281ab807632c83d53bbebe2ddee1c3c236d82bd1c0ab116e1ac0736964736f6c63430008070033";
