/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerkleRoyalties } from "./MerkleRoyalties";

export class MerkleRoyaltiesFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MerkleRoyalties> {
    return super.deploy(overrides || {}) as Promise<MerkleRoyalties>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleRoyalties {
    return super.attach(address) as MerkleRoyalties;
  }
  connect(signer: Signer): MerkleRoyaltiesFactory {
    return super.connect(signer) as MerkleRoyaltiesFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleRoyalties {
    return new Contract(address, _abi, signerOrProvider) as MerkleRoyalties;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "bytes32[][]",
        name: "_proofs",
        type: "bytes32[][]",
      },
      {
        internalType: "uint256[]",
        name: "_splitPoints",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bd2806100206000396000f3fe6080604052600436106100385760003560e01c806305141cd014610068578063c2a1c3d9146100b0578063c53b7702146100e057600080fd5b3661006357336000908152600160205260408120805434929061005c908490610acf565b9091555050005b600080fd5b34801561007457600080fd5b5061009d6100833660046108e6565b600060208181529281526040808220909352908152205481565b6040519081526020015b60405180910390f35b3480156100bc57600080fd5b506100d06100cb366004610919565b61010d565b60405190151581526020016100a7565b3480156100ec57600080fd5b5061009d6100fb3660046108c4565b60016020526000908152604090205481565b600082518451148015610121575081518451145b61015c5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064015b60405180910390fd5b6000805b855181101561058657600086828151811061017d5761017d610b70565b60200260200101519050600085838151811061019b5761019b610b70565b6020908102919091018101516001600160a01b0384166000818152808452604080822033835285528082205481516313b8d89760e11b8152915194965087959094929392632771b12e926004808201939291829003018186803b15801561020157600080fd5b505afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102399190610a04565b9050610264604051806040016040528060078152602001666c61737420257360c81b8152508361061c565b61028e60405180604001604052806008815260200167636f756e7420257360c01b8152508261061c565b604080513360601b6bffffffffffffffffffffffff191660208083019190915260348083018890528351808403909101815260549092019092528051910120610361908b88815181106102e3576102e3610b70565b6020026020010151856001600160a01b03166309063af66040518163ffffffff1660e01b815260040160206040518083038186803b15801561032457600080fd5b505afa158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190610a04565b610665565b6103a45760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b6044820152606401610153565b8082106103e55760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b6044820152606401610153565b60006001600160a01b03841663e7328873610401856001610acf565b846040518363ffffffff1660e01b8152600401610428929190918252602082015260400190565b60206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610a04565b90506104a26040518060400160405280600681526020016576616c20257360d01b8152508261061c565b816000808e8a815181106104b8576104b8610b70565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081203382529092528120919091556127106104f98784610b09565b6105039190610ae7565b6001600160a01b038816600090815260016020526040812080549293508392909190610530908490610b28565b909155506105409050818a610acf565b985061056c60405180604001604052806008815260200167636c61696d20257360c01b8152508261061c565b50505050505050808061057e90610b3f565b915050610160565b50604051600090339083908381818185875af1925050503d80600081146105c9576040519150601f19603f3d011682016040523d82523d6000602084013e6105ce565b606091505b50509050806106105760405162461bcd60e51b815260206004820152600e60248201526d18dbdd5b19081b9bdd081cd95b9960921b6044820152606401610153565b50600195945050505050565b6106618282604051602401610632929190610a1d565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261067a565b5050565b600061067283838661069b565b949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600081815b855181101561073f5760008682815181106106bd576106bd610b70565b602002602001015190508083116106ff57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061072c565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061073781610b3f565b9150506106a0565b509092149392505050565b80356001600160a01b038116811461076157600080fd5b919050565b600082601f83011261077757600080fd5b8135602061078c61078783610aab565b610a7a565b82815281810190858301600585811b880185018910156107ab57600080fd5b60005b8681101561084957823567ffffffffffffffff8111156107cd57600080fd5b8901603f81018b136107de57600080fd5b8681013560406107f061078783610aab565b808382528a820191508285018f84868a1b880101111561080f57600080fd5b600095505b84861015610832578035835260019590950194918b01918b01610814565b5089525050509486019450918501916001016107ae565b509198975050505050505050565b600082601f83011261086857600080fd5b8135602061087861078783610aab565b80838252828201915082860187848660051b890101111561089857600080fd5b60005b858110156108b75781358452928401929084019060010161089b565b5090979650505050505050565b6000602082840312156108d657600080fd5b6108df8261074a565b9392505050565b600080604083850312156108f957600080fd5b6109028361074a565b91506109106020840161074a565b90509250929050565b60008060006060848603121561092e57600080fd5b833567ffffffffffffffff8082111561094657600080fd5b818601915086601f83011261095a57600080fd5b8135602061096a61078783610aab565b8083825282820191508286018b848660051b890101111561098a57600080fd5b600096505b848710156109b4576109a08161074a565b83526001969096019591830191830161098f565b50975050870135925050808211156109cb57600080fd5b6109d787838801610766565b935060408601359150808211156109ed57600080fd5b506109fa86828701610857565b9150509250925092565b600060208284031215610a1657600080fd5b5051919050565b604081526000835180604084015260005b81811015610a4b5760208187018101516060868401015201610a2e565b81811115610a5d576000606083860101525b50602083019390935250601f91909101601f191601606001919050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610aa357610aa3610b86565b604052919050565b600067ffffffffffffffff821115610ac557610ac5610b86565b5060051b60200190565b60008219821115610ae257610ae2610b5a565b500190565b600082610b0457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610b2357610b23610b5a565b500290565b600082821015610b3a57610b3a610b5a565b500390565b6000600019821415610b5357610b53610b5a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f66be3d1ed6bbac6dbb6d5eedeceae4277188e79ae187fd21c2d62f9a0f1a49364736f6c63430008070033";
